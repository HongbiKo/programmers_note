youtube-demo 실습

유효성 검사

const express = require("express");
const router = express.Router();
const conn = require("../mariadb.js");
const { body, param, validationResult } = require("express-validator");

// jwt 모듈
const jwt = require("jsonwebtoken");

// dotenv 모듈
const dotenv = require("dotenv");
dotenv.config();

router.use(express.json());

const validate = (req, res, next) => {
  const err = validationResult(req);

  if (err.isEmpty()) {
    return next();
  } else {
    return res.status(400).json(err.array());
  }
};


// 로그인
router.post(
    "/login",
    [
      body("email")
        .notEmpty()
        .isString()
        .isEmail()
        .withMessage("이메일을 확인해주세요"),
      body("password")
        .notEmpty()
        .isString()
        .withMessage("비밀 번호를 확인해주세요"),
      validate,
    ],
    function (req, res) {
      const { email, password } = req.body;
      let loginUser = {};
  
      let sql = `SELECT * FROM users WHERE email = ?`;
      conn.query(sql, email, function (err, results) {
        if (err) {
          // 없는 채널 id 입력하면
          console.log(err);
          return res.status(400).end();
        }
  
        let loginUser = results[0];
        if (loginUser && loginUser.password == password) {
          // token 발행
          const token = jwt.sign(
            {
              email: loginUser.email,
              name: loginUser.name,
            },
            process.env.PRIVATE_KEY,
            {
              expiresIn: "30m", // 유효기간 설정
              issuer: "hongbi", // 토큰 발행한 사람
            }
          );
          res.cookie("token", token, { httpOnly: true });
          console.log(token); // 토큰 봐보장
          res.status(200).json({
            message: `${loginUser.name}님 로그인되었어요`,
          });
        } else {
          res.status(400).json({
            message: `이메일 또는 비밀번호가 틀렸습니다`,
          });
        }
      });
    }
  );
  
  module.exports = router;
  
